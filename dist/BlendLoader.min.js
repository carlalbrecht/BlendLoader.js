/*!
The MIT License (MIT)
Copyright (c) 2016 Carl Albrecht

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
!function(){"use strict";THREE.BlendLoader=function(a,b){this.manager=void 0!==a?a:THREE.DefaultLoadingManager,this.verbose=void 0!==b?b:!1,this.data=0,this.pointerSize=64,this.endianness=0,this.version="",this.compressed=!1,this.valid=!1},THREE.BlendLoader.prototype=new THREE.Loader,THREE.BlendLoader.prototype.constructor=THREE.BlendLoader,THREE.BlendLoader.prototype.load=function(a,b,c,d){var e=this,f=new THREE.XHRLoader(e.manager);f.setResponseType("arraybuffer"),f.setPath(this.path),f.load(a,function(a){var c=e.parse(a);"function"==typeof b&&b(c)},c,d)},THREE.BlendLoader.prototype.setPath=function(a){this.path=a}}(),function(){"use strict";function a(a){return 66==a[0]&&76==a[1]&&69==a[2]&&78==a[3]&&68==a[4]&&69==a[5]&&82==a[6]}THREE.BlendLoader.prototype.parse=function(a){var b=new Uint8Array(a);this.parseHeader(b)},THREE.BlendLoader.prototype.parseHeader=function(b){if(this.verbose&&console.log("Checking to see if the .blend is gzipped"),self.compressed=!a(b),self.compressed){this.verbose&&console.log(".blend is either invalid or compressed, attempting decompression");try{this.verbose&&console.time(".blend decompression time");var c=new Zlib.Gunzip(b);this.data=c.decompress()}catch(a){return console.error("Supplied URL is either malformed or is not a .blend file"),this.verbose&&console.timeEnd(".blend decompression time"),console.error(a),!1}if(this.valid=a(this.data),!this.valid)return console.error("Supplied URL was gzipped, but is not a .blend file"),this.verbose&&console.timeEnd(".blend decompression time"),!1;this.verbose&&console.log(".blend file successfully decompressed and validated"),this.verbose&&console.timeEnd(".blend decompression time")}else this.data=b,this.valid=!0,this.verbose&&console.log(".blend is not compressed, continuing");95==this.data[7]?(this.pointerSize=32,this.verbose&&console.log("Using 32-bit pointers")):(this.pointerSize=64,this.verbose&&console.log("Using 64-bit pointers")),86==this.data[8]?(this.endianness=1,this.verbose&&console.log("Values are big-endian")):(this.endianness=0,this.verbose&&console.log("Values are little-endian")),this.version=String.fromCharCode(this.data[9])+"."+String.fromCharCode(this.data[10])+"."+String.fromCharCode(this.data[11]),this.verbose&&console.log("This .blend file was created in Blender "+this.version)}}();